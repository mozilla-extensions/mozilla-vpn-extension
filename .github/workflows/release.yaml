name: Release Draft Workflow

on:
  release:
    types: [prereleased]
  workflow_dispatch:

jobs:
  build:
    name: Build XPI for Release Draft
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm install
      - run: npm run build
      - name: Rename XPI file
        run: mv dist/mozilla-vpn-extension.xpi dist/mozilla-vpn-extension-unsigned.xpi
      - name: Upload XPI as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mozilla-vpn-extension-unsigned.xpi
          path: dist/mozilla-vpn-extension-unsigned.xpi
      - name: Create amo_sources.zip excluding node_modules
        run: |
          # Create a zip file excluding the node_modules folder
          zip -r amo_sources.zip . -x "node_modules/*"

      - name: Upload amo_sources.zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: amo_sources.zip
          path: amo_sources.zip

  upload:
    name: Upload XPI and Sources to Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Download XPI and Sources
        uses: actions/download-artifact@v4
        with:
          name: mozilla-vpn-extension-unsigned.xpi
          path: .
      - name: Download amo_sources.zip
        uses: actions/download-artifact@v4
        with:
          name: amo_sources.zip
          path: .
      - name: Upload to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG=$(jq --raw-output '.release.tag_name' "$GITHUB_EVENT_PATH")
          echo "Uploading mozilla-vpn-extension-unsigned.xpi and amo_sources.zip to release $RELEASE_TAG"
          gh release upload "$RELEASE_TAG" "mozilla-vpn-extension-unsigned.xpi"
          gh release upload "$RELEASE_TAG" "amo_sources.zip"

  notify:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Extract Release Info
        run: |
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          RELEASE_URL="${{ github.event.release.html_url }}"
          DOWNLOAD_URL="${RELEASE_URL}/download/${RELEASE_TAG}/mozilla-vpn-extension-unsigned.xpi"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          echo "RELEASE_URL=$RELEASE_URL" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV

      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "version": "${{ env.RELEASE_TAG }}",
            "release": "${{ env.RELEASE_URL }}",
            "download": "${{ env.DOWNLOAD_URL }}"
          }' $SLACK_WEBHOOK_URL
